{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "users",
    "license": {
      "name": "Tenable.io"
    },
    "description": "User accounts enable you to provide access to Tenable.io and manage permissions for Tenable.io resources. You can use the API to perform standard CRUD operations on user objects, and also change passwords, generate API keys, impersonate users, enable multi-factor authentication, and manage access authorizations.\n\nFor background information about managing users, see [Tenable.io Vulnerability Management User Guide](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/Users.htm)."
  },
  "security": [
    {
      "cloud": []
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User accounts enable you to provide access to Tenable.io and manage permissions for Tenable.io resources. You can use the API to perform standard CRUD operations on user objects, and also change passwords, generate API keys, impersonate users, enable multi-factor authentication, and manage access authorizations.\n\nFor background information about managing users, see [Tenable.io Vulnerability Management User Guide](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/Users.htm)."
    }
  ],
  "servers": [
    {
      "url": "https://cloud.tenable.com"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "summary": "Create user",
        "description": "Creates a new user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-create",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The login name for the user."
                  },
                  "password": {
                    "type": "string",
                    "description": "The initial password for the user. Passwords must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character symbol.",
                    "format": "password"
                  },
                  "permissions": {
                    "type": "integer",
                    "description": "The user permissions for the user as described in <a href=\"/docs/permissions\">Permissions</a>.",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the user (for example, first and last name)."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user."
                  }
                },
                "required": [
                  "username",
                  "password",
                  "permissions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if Tenable.io successfully creates the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 5,
                      "user_name": "user2@example.com",
                      "username": "user4@api.demo",
                      "email": "user2@example.com",
                      "name": "Test User",
                      "type": "local",
                      "aggregate": true,
                      "permissions": 32,
                      "login_fail_count": 0,
                      "login_fail_total": 0,
                      "enabled": true,
                      "uuid": "ed6fd6a6-9d02-4178-8a71-7dd8b000e526",
                      "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                      "uuid_id": "ed6fd6a6-9d02-4178-8a71-7dd8b000e526"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if a field in the request is invalid."
          },
          "403": {
            "description": "Returned if you do not have permission to create a user."
          },
          "409": {
            "description": "Returned if you attempted to create a duplicate user."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List users",
        "description": "Returns a list of users.<p>Requires BASIC [16] user permissions. If you use credentials with ADMIN [64] permissions, Tenable.io returns all fields for individual user details. Otherwise, user details include only the `uuid`, `id`, `username`, and `email` fields. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-list",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "response": {
                    "value": {
                      "users": [
                        {
                          "id": 2,
                          "user_name": "admin@example.com",
                          "username": "admin@example.com",
                          "email": "admin@example.com",
                          "name": "Admin Example",
                          "type": "local",
                          "permissions": 64,
                          "login_fail_count": 0,
                          "login_fail_total": 0,
                          "enabled": true,
                          "uuid": "7a676323-47bb-4838-9cec-c9f01448bb2d",
                          "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                          "lastlogin": 1544477990398,
                          "uuid_id": "7a676323-47bb-4838-9cec-c9f01448bb2d"
                        },
                        {
                          "id": 4,
                          "user_name": "user3@example.com",
                          "username": "user3@example.com",
                          "email": "user3@example.com",
                          "name": "User Sample 3rd",
                          "type": "local",
                          "permissions": 32,
                          "login_fail_count": 0,
                          "login_fail_total": 0,
                          "enabled": true,
                          "uuid": "802ea9fe-701a-4c80-b001-59c252a178cb",
                          "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                          "uuid_id": "802ea9fe-701a-4c80-b001-59c252a178cb"
                        },
                        {
                          "id": 5,
                          "user_name": "user4@example.com",
                          "username": "user4@example.com",
                          "email": "user4@example.com",
                          "name": "User Test",
                          "type": "local",
                          "permissions": 32,
                          "login_fail_count": 0,
                          "login_fail_total": 0,
                          "enabled": true,
                          "uuid": "ed6fd6a6-9d02-4178-8a71-7dd8b000e526",
                          "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                          "uuid_id": "ed6fd6a6-9d02-4178-8a71-7dd8b000e526"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returned if you do not have permission to view the list of users."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Get user details",
        "description": "Returns details for a specific user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-details",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 4,
                      "user_name": "user3@example.com",
                      "username": "user3@example.com",
                      "email": "user3@example.com",
                      "name": "Test User",
                      "type": "local",
                      "permissions": 32,
                      "login_fail_count": 0,
                      "login_fail_total": 0,
                      "enabled": true,
                      "uuid": "802ea9fe-701a-4c80-b001-59c252a178cb",
                      "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                      "uuid_id": "802ea9fe-701a-4c80-b001-59c252a178cb"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returned if you do not have permission to view the given user details."
          },
          "404": {
            "description": "Returned if the user specified in the request does not exist."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Updates an existing user account.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-edit",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "integer",
                    "description": "The user permissions for the user as described in <a href=\"/docs/permissions\">Permissions</a>.",
                    "format": "int32"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the user (for example, first and last name)."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether the user's account is enabled (true) or disabled (false)."
                  }
                },
                "required": [
                  "permissions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if Tenable.io successfully updates the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": 4,
                      "user_name": "user3@example.com",
                      "username": "user3@example.com",
                      "email": "user3@example.com",
                      "name": "Test User",
                      "type": "local",
                      "whatsnew_version": "",
                      "aggregate": true,
                      "permissions": 32,
                      "login_fail_count": 0,
                      "login_fail_total": 0,
                      "enabled": false,
                      "uuid": "802ea9fe-701a-4c80-b001-59c252a178cb",
                      "container_uuid": "36f234c4-4ae3-4353-9324-8ad3dcc7fcc5",
                      "uuid_id": "802ea9fe-701a-4c80-b001-59c252a178cb"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if a field in the request is invalid."
          },
          "403": {
            "description": "Returned if you do not have permission to update a user."
          },
          "404": {
            "description": "Returned if the specified user does not exist."
          },
          "409": {
            "description": "Returned if you attempt to change your own account's enabled or disabled status."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-delete",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if Tenable.io deleted the user.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returned if you do not have permission to delete the user."
          },
          "404": {
            "description": "Returned if the user you attempted to delete does not exist."
          },
          "409": {
            "description": "Returned if you tried to delete your own account."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Returned if Tenable.io failed to delete the user.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred. Please wait a moment and try your request again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/chpasswd": {
      "put": {
        "summary": "Change password",
        "description": "Changes the password for a user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-password",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user whose password you want to change.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string",
                    "description": "The current password for the user.",
                    "format": "password"
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password for the user.",
                    "format": "password"
                  }
                },
                "required": [
                  "current_password",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if Tenable.io successfully changed the user password.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if Tenable.io cannot change the user password, because the new password is too short."
          },
          "403": {
            "description": "Returned if you do not have permission to change the user's password."
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Returned if Tenable.io failed to change the password.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred. Please wait a moment and try your request again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/enabled": {
      "put": {
        "summary": "Enable user account",
        "description": "Enables or disables an existing user account.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-enabled",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "The user's enabled or disabled status to be set (`true` to enable or `false` to disable)."
                  }
                },
                "required": [
                  "enabled"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an array of user objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "examples": {
                  "response": {
                    "value": {
                      "object": "user"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returned if you do not have permission to update a user."
          },
          "404": {
            "description": "Returned if the user that the request specified does not exist."
          },
          "409": {
            "description": "Returned if you tried to change your own permissions."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/authorizations": {
      "get": {
        "summary": "Get user authorizations",
        "description": "Returns user authorizations for accessing a Tenable.io instance. Access methods include user name and password, single sign-on (SSO) with SAML, and API.\n**Note:** All access methods are authorized by default.\n\nFor background information about managing user authorizations, see [Tenable.io Vulnerability Management User Guide](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/ManageUserAccessAuthorizations.htm).<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-list-auths",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The UUID of the user. You can find the user UUID by examining the output of the [GET /users](/reference#users-list) endpoint.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns authorizations for the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authorizations"
                },
                "examples": {
                  "response": {
                    "value": {
                      "account_uuid": "40ac4662-6af3-4a0b-b422-93387ec0f298",
                      "user_uuid": "1e623352-a68b-42e0-8af8-f1b7c10a2b72",
                      "api_permitted": true,
                      "password_permitted": false,
                      "saml_permitted": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "error": "User[UUID=b6a6900e-a616-4266-b2be-765de43348dd] not found."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user authorizations",
        "description": "Updates user authorizations for accessing a Tenable.io instance. Use the endpoint to grant and revoke authorizations.\n\n**Note:** You cannot update authorizations for the current user.\n\nFor background information about managing user authorizations, see [Tenable.io Vulnerability Management User Guide](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/ManageUserAccessAuthorizations.htm).<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-update-auths",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The UUID of the user. You can find the user UUID by examining the output of the [GET /users](/reference#users-list) endpoint.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authorizations_update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returned if the user's authorizations have been updated.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if you specify invalid input parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "error": "Unexpected character ('}' (code 125)): was expecting double-quote to start field name\n at [(String)\"{\r\n\"api_permitted\" : true,\r\n}\"; line: 3, column: 2]"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "error": "User[UUID=b6a6900e-a616-4266-b2be-765de43348dd] not found."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/keys": {
      "put": {
        "summary": "Generate API keys",
        "description": "Generates the API keys for a user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-keys",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if Tenable.io successfully generated the API keys for the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keys"
                },
                "examples": {
                  "response": {
                    "value": {
                      "accessKey": "26e07fb07181cf86e1bc7a240ce398645cf2bb80bbbefc178f100d6f5ffc067d",
                      "secretKey": "4be00decc6ea29e65d2910f1d54d23c14190a267285de4b05a481b1e6d3f0fd6"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Returned if you do not have permission to generate API keys for the user."
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Returned if Tenable.io failed to generate the keys.",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "statusCode": 500,
                      "error": "Internal Server Error",
                      "message": "An internal server error occurred. Please wait a moment and try your request again."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/impersonate": {
      "post": {
        "summary": "Impersonate user",
        "description": "Allows the current administrator to impersonate the given user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-impersonate",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user you want to impersonate.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returned if the impersonation was successful.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Returned if Tenable.io cannot process the request for any reason, for example, wrong permissions or an invalid API key."
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/two-factor/send-verification": {
      "post": {
        "summary": "Send verification code",
        "description": "Sends a one-time verification code to the user's phone number to start the process of enabling two-factor authentication.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-two-factor-enable",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sms_phone": {
                    "type": "string",
                    "description": "The phone number where Tenable.io sends the one-time verification code."
                  }
                },
                "required": [
                  "sms_phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if Tenable.io sent the one-time verification code successfully to the specified phone number.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if Tenable.io cannot send the verification code."
          },
          "404": {
            "description": "Returned if Tenable.io cannot find the specified user."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/two-factor/verify-code": {
      "post": {
        "summary": "Validate verification code",
        "description": "Validate the verification code sent to a phone number. If this request is successful, it enables two-factor authentication for the specified user.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-two-factor-enable-verify",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verification_code": {
                    "type": "string",
                    "description": "The verification code sent in the send-verification request."
                  }
                },
                "required": [
                  "verification_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if Tenable.io successfully validated the verification code and enabled two-factor authentication.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if Tenable.io failed to validate the verification code because the verification code was empty, incorrect, or expired."
          },
          "404": {
            "description": "Returned if the user specified in the request does not exist."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/two-factor": {
      "put": {
        "summary": "Configure two-factor authentication ",
        "description": "Enables or disables a user's two-factor authentication settings.<p>Requires ADMINISTRATOR [64] user permissions. See <a href=\"/docs/permissions\">Permissions</a>.</p>",
        "operationId": "users-two-factor",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "description": "The unique ID of the user.",
            "required": true,
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email_enabled": {
                    "type": "boolean",
                    "description": "Specifies whether backup notification for two-factor authentication is enabled. If enabled, Tenable.io sends the two-factor verification code via e-mail, as well as via the default SMS message."
                  },
                  "sms_enabled": {
                    "type": "boolean",
                    "description": "Specifies whether two-factor authentication is enabled. If enabled, Tenable.io sends the verification code via an SMS message. This parameter must be enabled to enable two-factor verification for the user."
                  },
                  "sms_phone": {
                    "type": "string",
                    "description": "The phone number to use for two-factor authentication. Must begin with the `+` sign. This field is required when sms\\_enabled is set to `true`.",
                    "example": "+155555555555"
                  }
                },
                "required": [
                  "email_enabled",
                  "sms_enabled",
                  "sms_phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if the two-factor authentication settings update was successful.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Returned if the user that the request specified does not exist."
          },
          "429": {
            "description": "Returned if you attempt to send too many requests in a specific period of time. For more information, see [Rate Limiting](/docs/rate-limiting).",
            "content": {
              "text/html": {
                "examples": {
                  "response": {
                    "value": "<html>\n\n<head>\n    <title>429 Too Many Requests</title>\n</head>\n\n<body bgcolor=\"white\">\n    <center>\n        <h1>429 Too Many Requests</h1>\n    </center>\n    <hr>\n    <center>nginx</center>\n</body>\n\n</html>"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cloud": {
        "type": "apiKey",
        "in": "header",
        "name": "X-ApiKeys",
        "description": "Format - accessKey=ACCESS_KEY;secretKey=SECRET_KEY"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique ID of the user."
          },
          "username": {
            "type": "string",
            "description": "The username for the user."
          },
          "name": {
            "type": "string",
            "description": "The name of the user (for example, first and last name)."
          },
          "email": {
            "type": "string",
            "description": "The email address for the user."
          },
          "permissions": {
            "type": "integer",
            "description": "The user permissions for the user as described in <a href=\"/docs/permissions\">Permissions</a>.",
            "format": "int32"
          },
          "lastlogin": {
            "type": "integer",
            "description": "The last time the user logged in to Tenable.io in the Unix time format."
          },
          "type": {
            "type": "string",
            "description": "The type of user. The only supported type is `local`."
          },
          "login_fail_count": {
            "type": "integer",
            "description": "The number of failed login attempts for the user since the last successful login."
          },
          "login_fail_total": {
            "type": "integer",
            "description": "The total number of failed login attempts for the user."
          },
          "last_login_attempt": {
            "type": "integer",
            "description": "The timestamp of the last failed login attempt for the user."
          },
          "enabled": {
            "type": "boolean",
            "description": "Specifies whether the user account is enabled (true) or disabled (false)."
          },
          "lockout": {
            "type": "integer",
            "description": "Specifies whether the user account is locked out (1) or available (0)."
          },
          "uuid_id": {
            "type": "string",
            "description": "The unique UUID for the user."
          }
        }
      },
      "keys": {
        "type": "object",
        "properties": {
          "accessKey": {
            "type": "string",
            "description": "The access key for the user account in Tenable.io. Use this key in combination with the user's secret key  to submit authorized API requests to Tenable.io."
          },
          "secretKey": {
            "type": "string",
            "description": "The secret key for the user account in Tenable.io. Use this key in combination with the user's access key to submit authorized API requests to Tenable.io."
          }
        }
      },
      "authorizations": {
        "type": "object",
        "properties": {
          "account_uuid": {
            "type": "string",
            "description": "The UUID of the container.",
            "format": "uuid"
          },
          "user_uuid": {
            "type": "string",
            "description": "The UUID of the user.",
            "format": "uuid"
          },
          "api_permitted": {
            "type": "boolean",
            "description": "Indicates whether API access is authorized for the user."
          },
          "password_permitted": {
            "type": "boolean",
            "description": "Indicates whether user name and password login is authorized for the user."
          },
          "saml_permitted": {
            "type": "boolean",
            "description": "Indicates whether SSO with SAML is authorized for the user."
          }
        }
      },
      "authorizations_update": {
        "type": "object",
        "description": "Specify `true` or `false` to grant or revoke authorizations.",
        "properties": {
          "api_permitted": {
            "type": "boolean",
            "description": "Indicates whether API access is authorized for the user."
          },
          "password_permitted": {
            "type": "boolean",
            "description": "Indicates whether user name and password login is authorized for the user."
          },
          "saml_permitted": {
            "type": "boolean",
            "description": "Indicates whether SSO with SAML is authorized for the user."
          }
        },
        "required": [
          "api_permitted",
          "password_permitted",
          "saml_permitted"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Tenable.io API error response.",
        "properties": {
          "error": {
            "type": "string",
            "description": "The extended description of the cause of the Tenable.io API error."
          }
        }
      }
    }
  }
}
